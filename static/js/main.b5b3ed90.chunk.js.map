{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAAAC,GAClB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAG,UAAKL,EAAMG,QAAQG,QAExB,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLXC,G,MAAW,SAAAR,GACtB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAElB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPrBO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCDG,E,kDAzCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK7C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GACvC,OACEA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,gBAChD5B,EAAQI,MAAMwB,cAAcC,SAASb,EAAYY,kBAIrD,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,8BAEA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAce,KAAKf,eAGrB,cAAC,EAAD,CAAUJ,SAAUoB,W,GApCVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b5b3ed90.chunk.js","sourcesContent":["import React from 'react'\nimport './card-styles.css'\nexport const Card = props => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set3&size=200x200`}\n        alt={`${props.monster.name}`}\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Card } from '../card/card-component'\nimport './card-list-styles.css'\n\n//   return <p key={monster.id}>{monster.name}</p>\nexport const CardList = props => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map(monster => {\n        //   Card Component\n        return <Card key={monster.id} monster={monster} /> //Monster becomes the props in the Card component\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport { CardList } from './components/card-list/card-list-component'\nimport { SearchBox } from './components/search-box/search-box-component'\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  // componentDidMount is Called immediately after a component is mounted.\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  } //Using the Arrow function allows you to have access to the this keywoard in the Class Component.\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => {\n      return (\n        monster.name.toLowerCase().includes(searchField.toLowerCase()) ||\n        monster.email.toLowerCase().includes(searchField.toLowerCase())\n      )\n      // return monster.name.toLowerCase().includes(searchField.toLowerCase()) //Original from tutorial.\n    })\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Rolobox Monsters</h1>\n        {/* THe Searchbox Component */}\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={this.handleChange}\n        />\n        {/* Card List Compnent */}\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}